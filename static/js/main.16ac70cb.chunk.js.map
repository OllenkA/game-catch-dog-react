{"version":3,"sources":["components/MainContent/MainContent.module.css","components/Header/Header.module.css","assets/dogs.mp3","components/Footer/Footer.module.css","redux/reducer.js","components/Header/Header.jsx","components/MainContent/MainContent.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","redux/store.js","index.js","assets/Dog.jpg"],"names":["module","exports","initialState","blocks","id","img","dog","visible","score","time","isButtonPressed","timer","miss","startGameAC","type","stopGameAC","reducer","state","action","newVisibleElement","Math","floor","random","newArray","map","el","newArrayAfterStopGame","connect","main","startGame","dispatch","setInterval","stopGame","getState","clearInterval","props","className","styles","container","onClick","button","alert","clickOnImage","clickToMiss","audioRef","React","createRef","clickOnDog","current","currentTime","play","circles","key","src","alt","circle","ref","gav","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16ac70cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainContent_container__vwlh9\",\"circle\":\"MainContent_circle__dB_o1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2G9w4\"};","module.exports = __webpack_public_path__ + \"static/media/dogs.2ef44bc1.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2qCPN\"};","import dog from '../assets/Dog.jpg';\r\n\r\n\r\nconst START_GAME = 'START_GAME';\r\nconst CHANGE_SCORE = 'CHANGE_SCORE';\r\nconst CLICK_ON_IMAGE = 'CLICK_ON_IMAGE';\r\nconst STOP_GAME = 'STOP_GAME';\r\nconst CLICK_TO_MISS = 'CLICK_TO_MISS';\r\n\r\n\r\nexport const startGame = () => (dispatch) => {\r\n    debugger\r\n    let timer = setInterval(() => {\r\n        dispatch(startGameAC(timer))\r\n    }, 1000);\r\n};\r\n\r\nexport const stopGame = () => (dispatch, getState) => {\r\n    clearInterval(getState().main.timer);\r\n    dispatch(stopGameAC());\r\n};\r\n\r\n// export const getDataTC = () => async(dispatch, getState) => {\r\n//     const resp = await API.getData(getState().main.inputValue)\r\n//     dispatch(setTextValueAC(JSON.stringify(resp.data)))\r\n// };\r\n\r\nconst initialState = {\r\n    blocks: [\r\n        {id: 0, img: dog, visible: false},\r\n        {id: 1, img: dog, visible: false},\r\n        {id: 2, img: dog, visible: false},\r\n        {id: 3, img: dog, visible: false},\r\n        {id: 4, img: dog, visible: false},\r\n        {id: 5, img: dog, visible: false},\r\n        {id: 6, img: dog, visible: false},\r\n        {id: 7, img: dog, visible: false},\r\n        {id: 8, img: dog, visible: false},\r\n    ],\r\n    score: 0,\r\n    time: 10,\r\n    isButtonPressed: false,\r\n    timer: 0,\r\n    miss: 0,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case START_GAME:\r\n            debugger\r\n            let newVisibleElement = Math.floor(Math.random() * 9);\r\n            let newArray = state.blocks.map(el => {\r\n                if (el.id === newVisibleElement) {\r\n                    return {\r\n                        ...el,\r\n                        visible: true\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...el,\r\n                        visible: false\r\n                    }\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n                blocks: newArray,\r\n                isButtonPressed: true,\r\n                time: state.time - 1,\r\n                timer: action.timer,\r\n            };\r\n\r\n        case STOP_GAME:\r\n            let newArrayAfterStopGame = state.blocks.map(el => {\r\n                    return {\r\n                        ...el,\r\n                        visible: false,\r\n                    }\r\n            }\r\n            );\r\n            return {\r\n                ...state,\r\n                blocks: newArrayAfterStopGame,\r\n                time: 3,\r\n                isButtonPressed: false,\r\n                score: 0,\r\n                timer: 0,\r\n                miss: 0,\r\n            };\r\n\r\n        case CHANGE_SCORE:\r\n            return {\r\n                ...state,\r\n                score: state.score + 1,\r\n            };\r\n            \r\n        case CLICK_ON_IMAGE:\r\n            return {\r\n                ...state,\r\n                score: state.score + 1,\r\n            };\r\n            \r\n        case CLICK_TO_MISS:\r\n            return {\r\n                ...state,\r\n                miss: state.miss + 1,\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const startGameAC = (timer) => ({type: START_GAME, timer});\r\nexport const changeScore = (score) => ({type: CHANGE_SCORE, score});\r\nexport const clickOnImage = () => ({type: CLICK_ON_IMAGE});\r\nexport const stopGameAC = () => ({type: STOP_GAME});\r\nexport const clickToMiss = () => ({type: CLICK_TO_MISS});\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {startGame, stopGame} from \"../../redux/reducer\";\r\n\r\n\r\n\r\nfunction Header(props) {\r\n\r\n    let overGame = () => {\r\n        alert(`You hit ${props.score} ${props.score === 1?'time':'times'}! \r\n        You miss ${props.miss} ${props.miss === 1?'time':'times'}!`);\r\n        props.stopGame();\r\n    };\r\n\r\n    \r\n    return (\r\n        <header className={styles.container}>\r\n            <h2>Catch the dog!</h2>\r\n            <div>\r\n                {props.isButtonPressed && props.time >= 0?\r\n                    <h3>0:{props.time}</h3>:\r\n                    <button onClick={props.startGame}\r\n                            className={styles.button}>\r\n                        START GAME\r\n                    </button>\r\n                }\r\n                {props.time === 0?overGame():null}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nlet mapDispatchToProps = (state) => ({\r\n    score: state.main.score,\r\n    isButtonPressed: state.main.isButtonPressed,\r\n    time: state.main.time,\r\n    miss: state.main.miss,\r\n});\r\n\r\n\r\nexport default connect(mapDispatchToProps, {startGame, stopGame})(Header);\r\n","import React from 'react';\r\nimport styles from './MainContent.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {clickOnImage, clickToMiss} from \"../../redux/reducer\";\r\nimport gav from '../../assets/dogs.mp3';\r\n\r\n\r\nfunction MainContent(props) {\r\n\r\n    let audioRef = React.createRef();\r\n\r\n    let clickOnDog = () => {\r\n        audioRef.current.currentTime = 0;\r\n        audioRef.current.play();\r\n        props.clickOnImage();\r\n    };\r\n\r\n    let circles = props.blocks.map(el => {\r\n        return <section key={el.id}>\r\n        {el.visible?<img  src={el.img} alt={''} className={styles.circle}\r\n                          onClick={props.isButtonPressed?clickOnDog:null}/>\r\n        :<div className={styles.circle} onClick={props.isButtonPressed?props.clickToMiss:null}/>}\r\n        </section>\r\n    });\r\n\r\n    return (\r\n        <article className={styles.container}>\r\n            <audio ref={audioRef} src={gav}/>\r\n            {circles}\r\n        </article>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    blocks: state.main.blocks,\r\n    isButtonPressed: state.main.isButtonPressed,\r\n});\r\n\r\nexport default connect(mapStateToProps, {clickOnImage, clickToMiss})(MainContent);","import React from 'react';\r\nimport styles from './Footer.module.css';\r\nimport {connect} from \"react-redux\";\r\n\r\n// import {changeScore} from \"../../redux/reducer\";\r\n\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className={styles.container}>\r\n            <h3>SCORE: {props.score}</h3>\r\n            <h3>MISS: {props.miss}</h3>\r\n        </footer>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => (\r\n    {\r\n        score: state.main.score,\r\n        miss: state.main.miss,\r\n    }\r\n);\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport MainContent from \"./components/MainContent/MainContent\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <MainContent/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    main: reducer,\r\n});\r\n\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\n// window.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Dog.21374653.jpg\";"],"sourceRoot":""}